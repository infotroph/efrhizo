Starting current_2010_s5 on  Fri Jun 23 19:14:56 UTC 2017
Running mctd_foursurf.R for year  2010  session  5
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.15.1, packaged: 2017-04-19 05:03:57 UTC, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.2 (2016-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X El Capitan 10.11.6

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.15.1         StanHeaders_2.15.0-1 ggplot2_2.2.1       

loaded via a namespace (and not attached):
 [1] colorspace_1.3-2 scales_0.4.1     lazyeval_0.2.0   plyr_1.8.4      
 [5] inline_0.3.14    gtable_0.2.0     tibble_1.3.3     gridExtra_2.2.1 
 [9] Rcpp_0.12.11     grid_3.3.2       methods_3.3.2    stats4_3.3.2    
[13] rlang_0.1.1      munsell_0.4.3   
structure(list(Tube = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 
24L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 
45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 
58L, 59L, 60L, 61L, 62L, 63L, 64L, 69L, 70L, 71L, 72L, 73L, 74L, 
75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 
88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L), Tube_alias = 1:84), .Names = c("Tube", 
"Tube_alias"), row.names = c(NA, -84L), class = "data.frame")
   Tube Tube_alias
1     1          1
2     2          2
3     3          3
4     4          4
5     5          5
6     6          6
7     7          7
8     8          8
9     9          9
10   10         10
11   11         11
12   12         12
13   13         13
14   14         14
15   15         15
16   16         16
17   17         17
18   18         18
19   19         19
20   20         20
21   21         21
22   22         22
23   23         23
24   24         24
25   33         25
26   34         26
27   35         27
28   36         28
29   37         29
30   38         30
31   39         31
32   40         32
33   41         33
34   42         34
35   43         35
36   44         36
37   45         37
38   46         38
39   47         39
40   48         40
41   49         41
42   50         42
43   51         43
44   52         44
45   53         45
46   54         46
47   55         47
48   56         48
49   57         49
50   58         50
51   59         51
52   60         52
53   61         53
54   62         54
55   63         55
56   64         56
57   69         57
58   70         58
59   71         59
60   72         60
61   73         61
62   74         62
63   75         63
64   76         64
65   77         65
66   78         66
67   79         67
68   80         68
69   81         69
70   82         70
71   83         71
72   84         72
73   85         73
74   86         74
75   87         75
76   88         76
77   89         77
78   90         78
79   91         79
80   92         80
81   93         81
82   94         82
83   95         83
84   96         84
[1] "Using data from 2010 , session 5"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          1        24                1
Switchgrass     2   Switchgrass         49        72               41
Miscanthus      3    Miscanthus         33        48               25
Prairie         4       Prairie         73        96               61
              last_tube_alias n_tubes
Maize-Soybean              24      24
Switchgrass                60      20
Miscanthus                 40      16
Prairie                    84      24
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup) [1] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
 [2] "Exception thrown at line 139: lognormal_log: Scale parameter[6] is inf, but must be finite!"                                           
 [3] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
 [4] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
 [5] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
 [6] "Exception thrown at line 139: lognormal_log: Scale parameter[6] is inf, but must be finite!"                                           
 [7] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
 [8] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
 [9] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[10] "Exception thrown at line 139: lognormal_log: Scale parameter[6] is inf, but must be finite!"                                           
[11] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[12] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[13] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[14] "Exception thrown at line 139: lognormal_log: Scale parameter[6] is inf, but must be finite!"                                           
[15] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[16] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[17] "Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:"                        
[18] "Exception thrown at line 139: lognormal_log: Scale parameter[38] is inf, but must be finite!"                                          
[19] "If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,"
[20] "but if this warning occurs often then your model may be either severely ill-conditioned or misspecified."                              
[21] "Error in sampler$call_sampler(args_list[[i]]) : "                                                                                      
[22] "  model45e93cb3a8c0_mctd_foursurf_namespace::write_array: y_pred[31] is nan, but must be greater than or equal to 0"                   
error occurred during calling the sampler; sampling not done

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 38.9514 seconds (Warm-up)
               132.152 seconds (Sampling)
               171.103 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 5
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[3] is inf, but must be finite!     9
Exception thrown at line 139: lognormal_log: Scale parameter[1] is 0, but must be > 0!          1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 42.3095 seconds (Warm-up)
               132.123 seconds (Sampling)
               174.432 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 2
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[3] is inf, but must be finite!     8
Exception thrown at line 139: lognormal_log: Scale parameter[1] is 0, but must be > 0!          2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 55.3773 seconds (Warm-up)
               130.828 seconds (Sampling)
               186.205 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 1
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     7
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 46.7578 seconds (Warm-up)
               151.374 seconds (Sampling)
               198.132 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 3
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[3] is inf, but must be finite!     8
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.
here are whatever error messages were returned
[[1]]
Stan model 'mctd_foursurf' does not contain samples.

Warning messages:
1: In .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
2: There were 2 divergent transitions after warmup. Increasing adapt_delta above 0.99 may help. See
http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup 
3: Examine the pairs() plot to diagnose sampling problems
 
Warning messages:
1: In .local(object, ...) :
  some chains had errors; consider specifying chains = 1 to debug
2: There were 2 divergent transitions after warmup. Increasing adapt_delta above 0.99 may help. See
http://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup
3: Examine the pairs() plot to diagnose sampling problems

Inference for Stan model: mctd_foursurf.
4 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=16000.

                        mean se_mean    sd     2.5%      25%      50%      75%
loc_detect             -8.75    0.00  0.15    -9.05    -8.84    -8.74    -8.64
scale_detect            1.37    0.00  0.17     1.07     1.25     1.35     1.48
loc_surface[1]         19.13    0.20 12.75    -7.04    10.53    20.34    28.65
loc_surface[2]         17.33    0.02  2.33    12.75    15.77    17.31    18.86
loc_surface[3]         14.22    0.07  6.58     1.43     9.84    14.06    18.52
loc_surface[4]         20.20    0.03  3.07    14.22    18.09    20.20    22.29
scale_surface[1]       12.23    0.06  3.53     3.68    10.21    12.22    14.43
scale_surface[2]        2.69    0.00  0.50     1.87     2.34     2.64     2.98
scale_surface[3]        6.19    0.02  2.79     1.92     4.20     5.79     7.78
scale_surface[4]        3.40    0.01  0.64     2.31     2.97     3.35     3.79
intercept[1]           -8.35    0.00  0.28    -8.89    -8.54    -8.36    -8.17
intercept[2]           -6.78    0.00  0.27    -7.31    -6.96    -6.79    -6.60
intercept[3]           -7.97    0.00  0.30    -8.57    -8.17    -7.97    -7.77
intercept[4]           -7.64    0.00  0.25    -8.11    -7.80    -7.63    -7.47
b_depth[1]             -0.05    0.00  0.30    -0.70    -0.23    -0.02     0.16
b_depth[2]             -1.46    0.00  0.25    -1.97    -1.63    -1.46    -1.29
b_depth[3]             -0.71    0.00  0.29    -1.33    -0.89    -0.69    -0.51
b_depth[4]             -1.25    0.00  0.27    -1.80    -1.42    -1.24    -1.06
sig_tube                1.01    0.00  0.11     0.81     0.93     1.00     1.08
sigma[1]                2.26    0.00  0.11     2.06     2.18     2.25     2.32
sigma[2]                2.22    0.00  0.10     2.03     2.15     2.21     2.28
sigma[3]                2.50    0.00  0.13     2.26     2.41     2.50     2.59
sigma[4]                2.33    0.00  0.10     2.14     2.26     2.32     2.39
crop_tot[1]             0.03    0.00  0.01     0.02     0.03     0.03     0.04
crop_tot[2]             1.14    0.01  1.03     0.28     0.54     0.84     1.37
crop_tot[3]             0.08    0.00  0.08     0.03     0.05     0.07     0.09
crop_tot[4]             0.30    0.00  0.39     0.08     0.15     0.22     0.34
crop_tot_diff[1]        1.10    0.01  1.03     0.24     0.51     0.80     1.33
crop_tot_diff[2]        0.05    0.00  0.08    -0.01     0.02     0.03     0.06
crop_tot_diff[3]        0.27    0.00  0.39     0.04     0.11     0.18     0.31
crop_int_diff[1]        1.57    0.01  0.39     0.81     1.31     1.57     1.83
crop_int_diff[2]        0.38    0.01  0.40    -0.40     0.11     0.38     0.65
crop_int_diff[3]        0.72    0.01  0.36     0.02     0.48     0.71     0.96
crop_bdepth_diff[1]    -1.42    0.00  0.39    -2.12    -1.68    -1.43    -1.16
crop_bdepth_diff[2]    -0.66    0.01  0.41    -1.47    -0.94    -0.66    -0.39
crop_bdepth_diff[3]    -1.20    0.00  0.41    -1.99    -1.48    -1.21    -0.93
lp__                -2373.77    0.15  9.04 -2392.52 -2379.72 -2373.49 -2367.50
                       97.5% n_eff Rhat
loc_detect             -8.47  6295    1
scale_detect            1.73  5228    1
loc_surface[1]         40.86  4129    1
loc_surface[2]         21.92 11798    1
loc_surface[3]         27.29  9105    1
loc_surface[4]         26.29  8908    1
scale_surface[1]       19.07  3623    1
scale_surface[2]        3.84 12025    1
scale_surface[3]       12.62 16000    1
scale_surface[4]        4.80 16000    1
intercept[1]           -7.81  3661    1
intercept[2]           -6.25  4008    1
intercept[3]           -7.39  3674    1
intercept[4]           -7.16  3494    1
b_depth[1]              0.46  4758    1
b_depth[2]             -0.97 12413    1
b_depth[3]             -0.20  9914    1
b_depth[4]             -0.74 11750    1
sig_tube                1.25  5732    1
sigma[1]                2.47 16000    1
sigma[2]                2.43 16000    1
sigma[3]                2.78 16000    1
sigma[4]                2.53 16000    1
crop_tot[1]             0.07  5079    1
crop_tot[2]             3.73  9711    1
crop_tot[3]             0.23  6782    1
crop_tot[4]             1.04 10263    1
crop_tot_diff[1]        3.70  9709    1
crop_tot_diff[2]        0.20  6928    1
crop_tot_diff[3]        1.01 10205    1
crop_int_diff[1]        2.34  3758    1
crop_int_diff[2]        1.16  3894    1
crop_int_diff[3]        1.43  3747    1
crop_bdepth_diff[1]    -0.62  7298    1
crop_bdepth_diff[2]     0.16  6750    1
crop_bdepth_diff[3]    -0.38  6794    1
lp__                -2356.90  3597    1

Samples were drawn using NUTS(diag_e) at Fri Jun 23 15:18:22 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
4 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=16000.

                      mean se_mean   sd   2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.02    0.01 0.77   0.00  0.00  0.00  0.00  0.13 16000
y_pred[15]            0.02    0.00 0.34   0.00  0.00  0.00  0.00  0.12 15929
y_pred[28]            0.00    0.00 0.11   0.00  0.00  0.00  0.00  0.02 16000
mu_pred[1]           -0.83    0.01 1.48  -3.67 -1.84 -0.84  0.16  2.07 12758
mu_pred[15]          -6.36    0.01 1.10  -8.49 -7.10 -6.37 -5.64 -4.18 12609
mu_pred[28]          -8.34    0.01 1.07 -10.44 -9.04 -8.34 -7.63 -6.25 12896
mu_obs_pred[1]       -7.01    0.01 1.20  -9.36 -7.83 -7.01 -6.20 -4.68 12819
mu_obs_pred[15]      -7.01    0.01 1.08  -9.13 -7.73 -7.01 -6.29 -4.90 13070
mu_obs_pred[28]      -8.55    0.01 1.05 -10.63 -9.24 -8.55 -7.86 -6.50 13765
detect_odds_pred[1]   0.75    0.00 0.15   0.39  0.66  0.78  0.87  0.96 13007
detect_odds_pred[15]  0.76    0.00 0.14   0.43  0.68  0.78  0.86  0.95 12990
detect_odds_pred[28]  0.53    0.00 0.17   0.20  0.41  0.54  0.66  0.84 14279
pred_tot[1]           1.94    0.03 4.05   0.09  0.38  0.88  2.02 10.30 13944
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Fri Jun 23 15:18:22 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 58.5861229458308"

mean of log(nonzero root volume): -7.494995 

RMSE of mu_obs vs log observed (zeroes excluded):  2.259598 
RMSE/var:  0.3360254 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 604 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	4m16.626s
user	12m59.708s
sys	0m6.380s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.15.1, packaged: 2017-04-19 05:03:57 UTC, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Joining, by = c("term", "estimate", "std.error", "rhat", "ess")
Joining, by = "crop_num"
Joining, by = "parameter"
