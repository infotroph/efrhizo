Starting current_2012_s3 on  Fri Jun 23 19:39:46 UTC 2017
Running mctd_foursurf.R for year  2012  session  3
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.15.1, packaged: 2017-04-19 05:03:57 UTC, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.2 (2016-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X El Capitan 10.11.6

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.15.1         StanHeaders_2.15.0-1 ggplot2_2.2.1       

loaded via a namespace (and not attached):
 [1] colorspace_1.3-2 scales_0.4.1     lazyeval_0.2.0   plyr_1.8.4      
 [5] inline_0.3.14    gtable_0.2.0     tibble_1.3.3     gridExtra_2.2.1 
 [9] Rcpp_0.12.11     grid_3.3.2       methods_3.3.2    stats4_3.3.2    
[13] rlang_0.1.1      munsell_0.4.3   
structure(list(Tube = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 
24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 
37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 
50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 63L, 
64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 
77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 
90L, 91L, 92L, 93L, 94L, 95L, 96L), Tube_alias = 1:95), .Names = c("Tube", 
"Tube_alias"), row.names = c(NA, -95L), class = "data.frame")
   Tube Tube_alias
1     1          1
2     2          2
3     3          3
4     4          4
5     5          5
6     6          6
7     7          7
8     8          8
9     9          9
10   10         10
11   11         11
12   12         12
13   13         13
14   14         14
15   15         15
16   16         16
17   17         17
18   18         18
19   19         19
20   20         20
21   21         21
22   22         22
23   23         23
24   24         24
25   25         25
26   26         26
27   27         27
28   28         28
29   29         29
30   30         30
31   31         31
32   32         32
33   33         33
34   34         34
35   35         35
36   36         36
37   37         37
38   38         38
39   39         39
40   40         40
41   41         41
42   42         42
43   43         43
44   44         44
45   45         45
46   46         46
47   47         47
48   48         48
49   49         49
50   50         50
51   51         51
52   52         52
53   53         53
54   54         54
55   55         55
56   56         56
57   57         57
58   58         58
59   59         59
60   60         60
61   61         61
62   63         62
63   64         63
64   65         64
65   66         65
66   67         66
67   68         67
68   69         68
69   70         69
70   71         70
71   72         71
72   73         72
73   74         73
74   75         74
75   76         75
76   77         76
77   78         77
78   79         78
79   80         79
80   81         80
81   82         81
82   83         82
83   84         83
84   85         84
85   86         85
86   87         86
87   88         87
88   89         88
89   90         89
90   91         90
91   92         91
92   93         92
93   94         93
94   95         94
95   96         95
[1] "Using data from 2012 , session 3"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          1        24                1
Switchgrass     2   Switchgrass         49        72               49
Miscanthus      3    Miscanthus         25        48               25
Prairie         4       Prairie         73        96               72
              last_tube_alias n_tubes
Maize-Soybean              24      24
Switchgrass                71      23
Miscanthus                 48      24
Prairie                    95      24
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 58.056 seconds (Warm-up)
               188.791 seconds (Sampling)
               246.847 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 1
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[4] is inf, but must be finite!     4
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     3
Exception thrown at line 139: lognormal_log: Scale parameter[2] is 0, but must be > 0!          2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 57.6194 seconds (Warm-up)
               189.347 seconds (Sampling)
               246.966 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 3
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     4
Exception thrown at line 139: lognormal_log: Scale parameter[1] is 0, but must be > 0!          2
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 51.9787 seconds (Warm-up)
               199.041 seconds (Sampling)
               251.02 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 4
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     9
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 53.5744 seconds (Warm-up)
               299.309 seconds (Sampling)
               352.883 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 2
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     4
Exception thrown at line 139: lognormal_log: Scale parameter[4] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 61.3541 seconds (Warm-up)
               311.273 seconds (Sampling)
               372.627 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 5
                                                                                             count
Exception thrown at line 139: lognormal_log: Scale parameter[12] is inf, but must be finite!     2
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                 1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.
NULL
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean    sd     2.5%      25%      50%      75%
loc_detect             -6.33    0.00  0.11    -6.56    -6.41    -6.33    -6.26
scale_detect            0.57    0.00  0.08     0.43     0.52     0.57     0.62
loc_surface[1]         23.09    0.01  1.65    19.89    21.99    23.09    24.21
loc_surface[2]         24.28    0.03  3.71    16.98    21.78    24.29    26.81
loc_surface[3]         17.50    0.10  8.88    -0.79    11.65    17.87    23.84
loc_surface[4]         19.09    0.03  2.99    13.33    17.09    19.02    21.07
scale_surface[1]        3.17    0.01  0.40     2.47     2.88     3.13     3.41
scale_surface[2]        6.17    0.01  0.95     4.52     5.50     6.09     6.74
scale_surface[3]       11.85    0.02  2.63     6.60    10.26    11.80    13.45
scale_surface[4]        4.99    0.01  0.87     3.43     4.39     4.94     5.53
intercept[1]           -5.86    0.00  0.14    -6.14    -5.95    -5.85    -5.76
intercept[2]           -5.11    0.00  0.16    -5.41    -5.21    -5.11    -5.01
intercept[3]           -5.72    0.00  0.15    -6.01    -5.82    -5.72    -5.62
intercept[4]           -5.41    0.00  0.13    -5.67    -5.50    -5.41    -5.32
b_depth[1]             -1.84    0.00  0.24    -2.32    -2.00    -1.83    -1.67
b_depth[2]             -0.85    0.00  0.21    -1.27    -0.98    -0.84    -0.71
b_depth[3]             -0.30    0.00  0.20    -0.71    -0.42    -0.28    -0.15
b_depth[4]             -0.83    0.00  0.15    -1.14    -0.93    -0.82    -0.72
sig_tube                0.52    0.00  0.07     0.39     0.47     0.52     0.56
sigma[1]                2.06    0.00  0.10     1.89     2.00     2.06     2.13
sigma[2]                1.81    0.00  0.08     1.67     1.76     1.81     1.86
sigma[3]                1.76    0.00  0.08     1.62     1.71     1.76     1.81
sigma[4]                1.70    0.00  0.06     1.59     1.66     1.70     1.74
crop_tot[1]             9.09    0.12  9.27     1.87     4.02     6.48    10.77
crop_tot[2]             1.62    0.01  0.76     0.82     1.15     1.43     1.87
crop_tot[3]             0.50    0.00  0.12     0.33     0.41     0.47     0.55
crop_tot[4]             1.11    0.00  0.34     0.66     0.88     1.04     1.25
crop_tot_diff[1]       -7.47    0.11  9.25   -30.40    -9.13    -4.89    -2.45
crop_tot_diff[2]       -8.60    0.12  9.27   -31.64   -10.28    -5.99    -3.53
crop_tot_diff[3]       -7.98    0.12  9.27   -31.03    -9.67    -5.36    -2.92
crop_int_diff[1]        0.75    0.00  0.20     0.36     0.60     0.74     0.88
crop_int_diff[2]        0.14    0.00  0.19    -0.24     0.01     0.14     0.26
crop_int_diff[3]        0.45    0.00  0.18     0.10     0.32     0.44     0.57
crop_bdepth_diff[1]     0.99    0.00  0.31     0.41     0.77     0.98     1.19
crop_bdepth_diff[2]     1.54    0.00  0.30     0.96     1.33     1.54     1.74
crop_bdepth_diff[3]     1.01    0.00  0.27     0.50     0.82     1.00     1.19
lp__                -2331.59    0.25 12.28 -2355.62 -2339.79 -2331.59 -2323.35
                       97.5% n_eff Rhat
loc_detect             -6.11  2966    1
scale_detect            0.73  2584    1
loc_surface[1]         26.33 20000    1
loc_surface[2]         31.47 12581    1
loc_surface[3]         33.62  8216    1
loc_surface[4]         25.05 13018    1
scale_surface[1]        4.04  4664    1
scale_surface[2]        8.27 20000    1
scale_surface[3]       17.12 20000    1
scale_surface[4]        6.86 13696    1
intercept[1]           -5.59  6884    1
intercept[2]           -4.80  6060    1
intercept[3]           -5.43  5682    1
intercept[4]           -5.15  5836    1
b_depth[1]             -1.38  3877    1
b_depth[2]             -0.46 12911    1
b_depth[3]              0.06  9229    1
b_depth[4]             -0.54 12908    1
sig_tube                0.67  3058    1
sigma[1]                2.26 20000    1
sigma[2]                1.97 20000    1
sigma[3]                1.91 20000    1
sigma[4]                1.83 20000    1
crop_tot[1]            32.21  6225    1
crop_tot[2]             3.54  9243    1
crop_tot[3]             0.79  7856    1
crop_tot[4]             1.94  9930    1
crop_tot_diff[1]       -0.17  6480    1
crop_tot_diff[2]       -1.38  6217    1
crop_tot_diff[3]       -0.76  6265    1
crop_int_diff[1]        1.17  5593    1
crop_int_diff[2]        0.52  5661    1
crop_int_diff[3]        0.82  6027    1
crop_bdepth_diff[1]     1.62  7299    1
crop_bdepth_diff[2]     2.15  5964    1
crop_bdepth_diff[3]     1.56  5872    1
lp__                -2307.51  2344    1

Samples were drawn using NUTS(diag_e) at Fri Jun 23 15:46:13 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.02    0.00 0.12  0.00  0.00  0.00  0.01  0.18 20000
y_pred[15]            0.03    0.00 0.12  0.00  0.00  0.00  0.02  0.20 20000
y_pred[28]            0.06    0.01 0.72  0.00  0.00  0.00  0.02  0.36 20000
mu_pred[1]           -1.60    0.01 1.05 -3.61 -2.32 -1.63 -0.92  0.52 13011
mu_pred[15]          -4.52    0.00 0.57 -5.64 -4.90 -4.52 -4.14 -3.39 18011
mu_pred[28]          -5.15    0.00 0.55 -6.23 -5.51 -5.14 -4.79 -4.05 17513
mu_obs_pred[1]       -5.46    0.01 0.70 -6.87 -5.92 -5.45 -4.98 -4.09 15532
mu_obs_pred[15]      -5.06    0.00 0.56 -6.16 -5.43 -5.06 -4.69 -3.96 19137
mu_obs_pred[28]      -5.15    0.00 0.55 -6.23 -5.51 -5.15 -4.79 -4.06 17497
detect_odds_pred[1]   0.77    0.00 0.19  0.30  0.67  0.82  0.92  0.98 15669
detect_odds_pred[15]  0.87    0.00 0.11  0.58  0.83  0.90  0.95  0.99 18779
detect_odds_pred[28]  0.86    0.00 0.11  0.55  0.81  0.89  0.94  0.98 17644
pred_tot[1]           1.87    0.01 1.57  0.44  0.98  1.47  2.28  5.68 14668
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Fri Jun 23 15:46:13 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 61.9152"

mean of log(nonzero root volume): -5.432631 

RMSE of mu_obs vs log observed (zeroes excluded):  1.794749 
RMSE/var:  0.4835181 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 1 rows containing missing values (geom_bar). 
Warning message:
Removed 558 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	7m28.209s
user	25m24.539s
sys	0m12.882s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.15.1, packaged: 2017-04-19 05:03:57 UTC, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Joining, by = c("term", "estimate", "std.error", "rhat", "ess")
Joining, by = "crop_num"
Joining, by = "parameter"
