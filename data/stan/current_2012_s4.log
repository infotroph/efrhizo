Starting current_2012_s4 on  Fri Jun 23 19:47:20 UTC 2017
Running mctd_foursurf.R for year  2012  session  4
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.15.1, packaged: 2017-04-19 05:03:57 UTC, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.2 (2016-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X El Capitan 10.11.6

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.15.1         StanHeaders_2.15.0-1 ggplot2_2.2.1       

loaded via a namespace (and not attached):
 [1] colorspace_1.3-2 scales_0.4.1     lazyeval_0.2.0   plyr_1.8.4      
 [5] inline_0.3.14    gtable_0.2.0     tibble_1.3.3     gridExtra_2.2.1 
 [9] Rcpp_0.12.11     grid_3.3.2       methods_3.3.2    stats4_3.3.2    
[13] rlang_0.1.1      munsell_0.4.3   
structure(list(Tube = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 
24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 
37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 
50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 63L, 
64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 
77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 
90L, 91L, 92L, 93L, 94L, 95L, 96L), Tube_alias = 1:95), .Names = c("Tube", 
"Tube_alias"), row.names = c(NA, -95L), class = "data.frame")
   Tube Tube_alias
1     1          1
2     2          2
3     3          3
4     4          4
5     5          5
6     6          6
7     7          7
8     8          8
9     9          9
10   10         10
11   11         11
12   12         12
13   13         13
14   14         14
15   15         15
16   16         16
17   17         17
18   18         18
19   19         19
20   20         20
21   21         21
22   22         22
23   23         23
24   24         24
25   25         25
26   26         26
27   27         27
28   28         28
29   29         29
30   30         30
31   31         31
32   32         32
33   33         33
34   34         34
35   35         35
36   36         36
37   37         37
38   38         38
39   39         39
40   40         40
41   41         41
42   42         42
43   43         43
44   44         44
45   45         45
46   46         46
47   47         47
48   48         48
49   49         49
50   50         50
51   51         51
52   52         52
53   53         53
54   54         54
55   55         55
56   56         56
57   57         57
58   58         58
59   59         59
60   60         60
61   61         61
62   63         62
63   64         63
64   65         64
65   66         65
66   67         66
67   68         67
68   69         68
69   70         69
70   71         70
71   72         71
72   73         72
73   74         73
74   75         74
75   76         75
76   77         76
77   78         77
78   79         78
79   80         79
80   81         80
81   82         81
82   83         82
83   84         83
84   85         84
85   86         85
86   87         86
87   88         87
88   89         88
89   90         89
90   91         90
91   92         91
92   93         92
93   94         93
94   95         94
95   96         95
[1] "Using data from 2012 , session 4"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          1        24                1
Switchgrass     2   Switchgrass         49        72               49
Miscanthus      3    Miscanthus         25        48               25
Prairie         4       Prairie         73        96               72
              last_tube_alias n_tubes
Maize-Soybean              24      24
Switchgrass                71      23
Miscanthus                 48      24
Prairie                    95      24
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 53.1563 seconds (Warm-up)
               182.41 seconds (Sampling)
               235.567 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 4
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     8
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 56.1436 seconds (Warm-up)
               182.218 seconds (Sampling)
               238.362 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 2
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     4
Exception thrown at line 139: lognormal_log: Scale parameter[5] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 60.3396 seconds (Warm-up)
               181.303 seconds (Sampling)
               241.643 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 1
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[2] is inf, but must be finite!     3
Exception thrown at line 139: lognormal_log: Scale parameter[5] is inf, but must be finite!     3
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     2
Exception thrown at line 139: lognormal_log: Scale parameter[18] is 0, but must be > 0!         2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 61.1745 seconds (Warm-up)
               180.176 seconds (Sampling)
               241.35 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 5
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[2] is inf, but must be finite!     2
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 62.2929 seconds (Warm-up)
               181.004 seconds (Sampling)
               243.297 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 3
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     5
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                1
Exception thrown at line 139: lognormal_log: Scale parameter[2] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.
NULL
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean   sd     2.5%      25%      50%      75%
loc_detect             -6.68    0.00 0.16    -7.01    -6.78    -6.67    -6.57
scale_detect            1.34    0.00 0.17     1.04     1.22     1.33     1.44
loc_surface[1]         22.71    0.08 7.85     6.25    17.69    23.09    28.10
loc_surface[2]         35.70    0.05 5.48    23.99    32.30    35.99    39.52
loc_surface[3]         22.36    0.09 9.12     3.05    16.45    22.83    28.81
loc_surface[4]         18.89    0.04 4.26    11.19    15.98    18.69    21.64
scale_surface[1]        8.97    0.02 2.35     4.50     7.49     8.85    10.33
scale_surface[2]        7.96    0.01 1.26     5.93     7.10     7.83     8.66
scale_surface[3]       10.08    0.02 2.46     5.61     8.47     9.94    11.55
scale_surface[4]        5.87    0.01 1.59     3.35     4.75     5.65     6.77
intercept[1]           -5.05    0.00 0.17    -5.38    -5.16    -5.05    -4.94
intercept[2]           -4.59    0.00 0.20    -4.96    -4.72    -4.59    -4.46
intercept[3]           -5.80    0.00 0.18    -6.14    -5.92    -5.80    -5.68
intercept[4]           -5.29    0.00 0.16    -5.60    -5.40    -5.29    -5.19
b_depth[1]              0.35    0.00 0.29    -0.26     0.16     0.36     0.55
b_depth[2]             -0.94    0.00 0.33    -1.59    -1.16    -0.94    -0.71
b_depth[3]             -0.19    0.00 0.30    -0.83    -0.39    -0.17     0.02
b_depth[4]             -0.25    0.00 0.20    -0.67    -0.39    -0.25    -0.11
sig_tube                0.61    0.00 0.07     0.49     0.57     0.61     0.66
sigma[1]                1.63    0.00 0.07     1.51     1.58     1.63     1.67
sigma[2]                1.65    0.00 0.07     1.52     1.60     1.65     1.70
sigma[3]                1.71    0.00 0.07     1.57     1.65     1.70     1.75
sigma[4]                1.53    0.00 0.06     1.42     1.49     1.53     1.57
crop_tot[1]             0.83    0.00 0.16     0.58     0.72     0.81     0.91
crop_tot[2]             4.09    0.05 5.71     1.15     1.92     2.79     4.51
crop_tot[3]             0.46    0.00 0.19     0.28     0.36     0.42     0.51
crop_tot[4]             0.74    0.00 0.16     0.51     0.63     0.72     0.82
crop_tot_diff[1]        3.26    0.05 5.71     0.27     1.09     1.96     3.67
crop_tot_diff[2]       -0.37    0.00 0.25    -0.80    -0.50    -0.38    -0.26
crop_tot_diff[3]       -0.09    0.00 0.23    -0.53    -0.22    -0.09     0.05
crop_int_diff[1]        0.46    0.00 0.26    -0.04     0.29     0.46     0.63
crop_int_diff[2]       -0.75    0.00 0.25    -1.23    -0.91    -0.75    -0.58
crop_int_diff[3]       -0.24    0.00 0.23    -0.69    -0.39    -0.24    -0.09
crop_bdepth_diff[1]    -1.28    0.00 0.43    -2.10    -1.58    -1.28    -0.99
crop_bdepth_diff[2]    -0.54    0.00 0.41    -1.36    -0.81    -0.53    -0.26
crop_bdepth_diff[3]    -0.60    0.00 0.35    -1.27    -0.84    -0.61    -0.37
lp__                -2386.76    0.12 9.09 -2405.30 -2392.73 -2386.41 -2380.48
                       97.5% n_eff Rhat
loc_detect             -6.40  9906    1
scale_detect            1.71  9012    1
loc_surface[1]         37.08  8673    1
loc_surface[2]         45.55 11458    1
loc_surface[3]         38.70 10280    1
loc_surface[4]         27.72 13171    1
scale_surface[1]       14.04  9249    1
scale_surface[2]       10.86 20000    1
scale_surface[3]       15.30 20000    1
scale_surface[4]        9.56 20000    1
intercept[1]           -4.71  7162    1
intercept[2]           -4.19  7739    1
intercept[3]           -5.44  7575    1
intercept[4]           -4.98  6785    1
b_depth[1]              0.87  9140    1
b_depth[2]             -0.29 11548    1
b_depth[3]              0.33 10529    1
b_depth[4]              0.13 16427    1
sig_tube                0.76  9157    1
sigma[1]                1.76 20000    1
sigma[2]                1.79 20000    1
sigma[3]                1.86 20000    1
sigma[4]                1.66 20000    1
crop_tot[1]             1.19  7817    1
crop_tot[2]            14.52 13632    1
crop_tot[3]             0.90  9780    1
crop_tot[4]             1.14  8459    1
crop_tot_diff[1]       13.63 13627    1
crop_tot_diff[2]        0.12  8652    1
crop_tot_diff[3]        0.37  8536    1
crop_int_diff[1]        0.96  7537    1
crop_int_diff[2]       -0.26  7039    1
crop_int_diff[3]        0.21  7097    1
crop_bdepth_diff[1]    -0.43 10783    1
crop_bdepth_diff[2]     0.25 10245    1
crop_bdepth_diff[3]     0.10 12340    1
lp__                -2369.59  5414    1

Samples were drawn using NUTS(diag_e) at Fri Jun 23 15:51:36 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean    sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.03    0.00  0.19  0.00  0.00  0.00  0.01  0.20 19418
y_pred[15]            0.01    0.00  0.05  0.00  0.00  0.00  0.01  0.08 19969
y_pred[28]            0.02    0.00  0.08  0.00  0.00  0.00  0.01  0.13 20000
mu_pred[1]           -0.72    0.01  1.60 -3.85 -1.79 -0.72  0.37  2.41 11654
mu_pred[15]          -5.01    0.01  0.68 -6.34 -5.47 -5.01 -4.56 -3.66 17941
mu_pred[28]          -5.20    0.01  0.67 -6.52 -5.64 -5.19 -4.75 -3.89 16458
mu_obs_pred[1]       -5.18    0.01  0.96 -7.05 -5.83 -5.18 -4.53 -3.32 13699
mu_obs_pred[15]      -5.56    0.00  0.66 -6.85 -6.00 -5.57 -5.12 -4.26 17965
mu_obs_pred[28]      -5.35    0.00  0.65 -6.64 -5.77 -5.34 -4.92 -4.07 18050
detect_odds_pred[1]   0.73    0.00  0.13  0.43  0.65  0.75  0.83  0.93 13964
detect_odds_pred[15]  0.69    0.00  0.10  0.47  0.62  0.70  0.76  0.86 17585
detect_odds_pred[28]  0.72    0.00  0.10  0.51  0.66  0.73  0.79  0.88 19642
pred_tot[1]           4.95    0.08 10.35  0.59  1.66  2.94  5.49 20.69 15210
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Fri Jun 23 15:51:36 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 62.6783472803347"

mean of log(nonzero root volume): -5.337845 

RMSE of mu_obs vs log observed (zeroes excluded):  1.585581 
RMSE/var:  0.4789064 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 1 rows containing missing values (geom_bar). 
Warning message:
Removed 599 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	5m17.031s
user	20m56.966s
sys	0m10.379s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.15.1, packaged: 2017-04-19 05:03:57 UTC, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Joining, by = c("term", "estimate", "std.error", "rhat", "ess")
Joining, by = "crop_num"
Joining, by = "parameter"
