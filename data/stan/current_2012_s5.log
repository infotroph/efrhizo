Starting current_2012_s5 on  Sat Nov 19 15:15:34 UTC 2016
Running mctd_foursurf.R for year  2012  session  5
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.12.1, packaged: , GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.2 (2016-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X El Capitan 10.11.6

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.12.1       StanHeaders_2.12.0 ggplot2_2.2.0     

loaded via a namespace (and not attached):
 [1] colorspace_1.3-0 scales_0.4.1     assertthat_0.1   lazyeval_0.2.0  
 [5] plyr_1.8.4       tools_3.3.2      inline_0.3.14    gtable_0.2.0    
 [9] tibble_1.2       gridExtra_2.2.1  Rcpp_0.12.7      grid_3.3.2      
[13] methods_3.3.2    stats4_3.3.2     munsell_0.4.3   
structure(list(Tube = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 
24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 
37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 
51L, 57L, 58L, 59L, 60L, 61L, 63L, 64L, 69L, 70L, 71L, 72L, 81L, 
82L, 83L, 84L, 85L, 86L, 87L, 88L, 93L, 94L, 95L, 96L), Tube_alias = 1:73), .Names = c("Tube", 
"Tube_alias"), row.names = c(NA, -73L), class = "data.frame")
   Tube Tube_alias
1     1          1
2     2          2
3     3          3
4     4          4
5     5          5
6     6          6
7     7          7
8     8          8
9     9          9
10   10         10
11   11         11
12   12         12
13   13         13
14   14         14
15   15         15
16   16         16
17   17         17
18   18         18
19   19         19
20   20         20
21   21         21
22   22         22
23   23         23
24   24         24
25   25         25
26   26         26
27   27         27
28   28         28
29   29         29
30   30         30
31   31         31
32   32         32
33   33         33
34   34         34
35   35         35
36   36         36
37   37         37
38   38         38
39   39         39
40   40         40
41   41         41
42   42         42
43   43         43
44   44         44
45   45         45
46   46         46
47   47         47
48   48         48
49   49         49
50   51         50
51   57         51
52   58         52
53   59         53
54   60         54
55   61         55
56   63         56
57   64         57
58   69         58
59   70         59
60   71         60
61   72         61
62   81         62
63   82         63
64   83         64
65   84         65
66   85         66
67   86         67
68   87         68
69   88         69
70   93         70
71   94         71
72   95         72
73   96         73
[1] "Using data from 2012 , session 5"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          1        24                1
Switchgrass     2   Switchgrass         49        72               49
Miscanthus      3    Miscanthus         25        48               25
Prairie         4       Prairie         81        96               62
              last_tube_alias n_tubes
Maize-Soybean              24      24
Switchgrass                61      13
Miscanthus                 48      24
Prairie                    73      12
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.
starting worker pid=33658 on localhost:11137 at 10:15:39.069
starting worker pid=33666 on localhost:11137 at 10:15:39.247
starting worker pid=33674 on localhost:11137 at 10:15:39.428
starting worker pid=33682 on localhost:11137 at 10:15:39.613
starting worker pid=33690 on localhost:11137 at 10:15:39.788

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 50.6815 seconds (Warm-up)
               172.255 seconds (Sampling)
               222.937 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 1
                                                                                             count
Exception thrown at line 150: lognormal_log: Scale parameter[1] is inf, but must be finite!      4
Exception thrown at line 150: lognormal_log: Scale parameter[2] is inf, but must be finite!      2
Exception thrown at line 140: normal_log: Scale parameter is 0, but must be > 0!                 1
Exception thrown at line 150: lognormal_log: Scale parameter[74] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 50.6767 seconds (Warm-up)
               171.83 seconds (Sampling)
               222.507 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 2
                                                                                            count
Exception thrown at line 150: lognormal_log: Scale parameter[2] is inf, but must be finite!     8
Exception thrown at line 150: lognormal_log: Scale parameter[1] is inf, but must be finite!     2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 50.3273 seconds (Warm-up)
               170.9 seconds (Sampling)
               221.227 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 5
                                                                                            count
Exception thrown at line 150: lognormal_log: Scale parameter[2] is inf, but must be finite!     5
Exception thrown at line 150: lognormal_log: Scale parameter[1] is 0, but must be > 0!          1
Exception thrown at line 150: lognormal_log: Scale parameter[5] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 54.1951 seconds (Warm-up)
               170.595 seconds (Sampling)
               224.79 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 3
                                                                                            count
Exception thrown at line 150: lognormal_log: Scale parameter[1] is inf, but must be finite!     5
Exception thrown at line 150: lognormal_log: Scale parameter[2] is inf, but must be finite!     3
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 56.3733 seconds (Warm-up)
               170.091 seconds (Sampling)
               226.464 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 4
                                                                                            count
Exception thrown at line 150: lognormal_log: Scale parameter[1] is inf, but must be finite!     6
Exception thrown at line 140: normal_log: Scale parameter is 0, but must be > 0!                1
Exception thrown at line 150: lognormal_log: Scale parameter[2] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.
NULL
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean   sd     2.5%      25%      50%      75%
loc_detect             -6.88    0.00 0.17    -7.24    -6.98    -6.87    -6.76
scale_detect            1.10    0.00 0.16     0.83     0.99     1.09     1.20
loc_surface[1]         17.69    0.03 4.17    10.07    14.90    17.51    20.33
loc_surface[2]         24.64    0.06 7.27     8.53    20.38    25.19    29.58
loc_surface[3]         18.08    0.06 7.81     1.38    13.21    18.59    23.39
loc_surface[4]         18.83    0.04 5.28     8.05    15.53    18.86    22.25
scale_surface[1]        5.26    0.01 1.97     2.31     3.93     4.98     6.27
scale_surface[2]        8.83    0.02 3.05     5.06     6.86     8.16     9.99
scale_surface[3]       10.80    0.03 4.09     5.26     8.06     9.95    12.65
scale_surface[4]        6.89    0.02 2.63     3.61     5.19     6.33     7.89
intercept[1]           -5.27    0.00 0.17    -5.60    -5.38    -5.27    -5.15
intercept[2]           -4.89    0.00 0.24    -5.34    -5.05    -4.89    -4.74
intercept[3]           -5.99    0.00 0.18    -6.35    -6.11    -5.99    -5.86
intercept[4]           -5.66    0.00 0.23    -6.12    -5.81    -5.66    -5.51
b_depth[1]              0.36    0.00 0.21    -0.06     0.22     0.37     0.50
b_depth[2]             -0.30    0.00 0.33    -0.98    -0.52    -0.28    -0.06
b_depth[3]             -0.34    0.00 0.24    -0.85    -0.50    -0.33    -0.18
b_depth[4]             -0.68    0.00 0.24    -1.16    -0.84    -0.68    -0.52
sig_tube                0.70    0.00 0.08     0.55     0.64     0.70     0.75
sigma[1]                1.69    0.00 0.07     1.56     1.64     1.69     1.73
sigma[2]                1.64    0.00 0.08     1.49     1.58     1.64     1.70
sigma[3]                2.00    0.00 0.09     1.84     1.94     2.00     2.06
sigma[4]                1.52    0.00 0.08     1.38     1.47     1.52     1.57
crop_tot[1]             0.65    0.00 0.12     0.46     0.57     0.64     0.72
crop_tot[2]             1.27    0.01 0.77     0.64     0.90     1.11     1.41
crop_tot[3]             0.40    0.00 0.13     0.25     0.32     0.38     0.45
crop_tot[4]             0.78    0.00 0.37     0.37     0.55     0.69     0.91
crop_tot_diff[1]        0.61    0.01 0.78    -0.08     0.24     0.46     0.77
crop_tot_diff[2]       -0.25    0.00 0.18    -0.56    -0.36    -0.26    -0.16
crop_tot_diff[3]        0.13    0.00 0.39    -0.37    -0.11     0.05     0.27
crop_int_diff[1]        0.38    0.00 0.29    -0.18     0.18     0.38     0.57
crop_int_diff[2]       -0.72    0.00 0.25    -1.20    -0.88    -0.72    -0.55
crop_int_diff[3]       -0.39    0.00 0.28    -0.95    -0.58    -0.39    -0.20
crop_bdepth_diff[1]    -0.66    0.00 0.39    -1.45    -0.91    -0.65    -0.39
crop_bdepth_diff[2]    -0.70    0.00 0.31    -1.34    -0.91    -0.69    -0.49
crop_bdepth_diff[3]    -1.04    0.00 0.31    -1.66    -1.26    -1.04    -0.83
lp__                -1922.29    0.12 8.53 -1939.83 -1927.85 -1921.91 -1916.36
                       97.5% n_eff Rhat
loc_detect             -6.57  9849    1
scale_detect            1.45  8825    1
loc_surface[1]         26.38 17548    1
loc_surface[2]         37.32 15672    1
loc_surface[3]         32.23 20000    1
loc_surface[4]         28.86 20000    1
scale_surface[1]        9.85 20000    1
scale_surface[2]       16.74 20000    1
scale_surface[3]       21.41 20000    1
scale_surface[4]       13.80 20000    1
intercept[1]           -4.93  7424    1
intercept[2]           -4.42  8106    1
intercept[3]           -5.62  8679    1
intercept[4]           -5.21  7750    1
b_depth[1]              0.75 20000    1
b_depth[2]              0.29 15721    1
b_depth[3]              0.07 15456    1
b_depth[4]             -0.24 20000    1
sig_tube                0.88 11041    1
sigma[1]                1.83 20000    1
sigma[2]                1.81 20000    1
sigma[3]                2.18 20000    1
sigma[4]                1.68 20000    1
crop_tot[1]             0.91  7437    1
crop_tot[2]             2.87 13335    1
crop_tot[3]             0.72 11612    1
crop_tot[4]             1.73 13460    1
crop_tot_diff[1]        2.22 13379    1
crop_tot_diff[2]        0.12  8529    1
crop_tot_diff[3]        1.08 12527    1
crop_int_diff[1]        0.94  7552    1
crop_int_diff[2]       -0.23  7227    1
crop_int_diff[3]        0.16  7425    1
crop_bdepth_diff[1]     0.06 16136    1
crop_bdepth_diff[2]    -0.12 20000    1
crop_bdepth_diff[3]    -0.43 20000    1
lp__                -1906.53  5249    1

Samples were drawn using NUTS(diag_e) at Sat Nov 19 10:19:35 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.01    0.00 0.05  0.00  0.00  0.00  0.00  0.04 20000
y_pred[15]            0.02    0.00 0.07  0.00  0.00  0.00  0.01  0.11 19684
y_pred[28]            0.02    0.00 0.09  0.00  0.00  0.00  0.01  0.15 19375
mu_pred[1]           -3.65    0.01 1.62 -6.58 -4.79 -3.71 -2.57 -0.38 15405
mu_pred[15]          -4.90    0.01 0.80 -6.47 -5.43 -4.89 -4.37 -3.32 16606
mu_pred[28]          -5.41    0.01 0.73 -6.88 -5.90 -5.41 -4.93 -3.96 18359
mu_obs_pred[1]       -6.69    0.01 0.98 -8.62 -7.35 -6.70 -6.03 -4.75 20000
mu_obs_pred[15]      -5.49    0.01 0.77 -7.01 -6.00 -5.49 -4.97 -4.00 17073
mu_obs_pred[28]      -5.44    0.01 0.73 -6.90 -5.92 -5.44 -4.95 -3.99 18405
detect_odds_pred[1]   0.54    0.00 0.19  0.17  0.39  0.54  0.68  0.88 20000
detect_odds_pred[15]  0.76    0.00 0.12  0.47  0.69  0.78  0.85  0.94 17063
detect_odds_pred[28]  0.77    0.00 0.11  0.50  0.70  0.79  0.85  0.94 18693
pred_tot[1]           1.65    0.02 2.11  0.26  0.68  1.15  1.97  5.91 18120
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Sat Nov 19 10:19:35 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 63.1561040693796"

mean of log(nonzero root volume): -5.514442 

RMSE of mu_obs vs log observed (zeroes excluded):  1.704656 
RMSE/var:  0.4599037 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 1 rows containing missing values (geom_bar). 
Warning message:
Removed 433 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	4m59.039s
user	0m57.396s
sys	0m4.403s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.12.1, packaged: , GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Joining, by = c("term", "estimate", "std.error", "rhat", "ess")
Joining, by = "crop_num"
Joining, by = "parameter"
