Starting current_2011_s4 on  Sat Nov 19 14:37:08 UTC 2016
Running mctd_foursurf.R for year  2011  session  4
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.12.1, packaged: , GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.2 (2016-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X El Capitan 10.11.6

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.12.1       StanHeaders_2.12.0 ggplot2_2.2.0     

loaded via a namespace (and not attached):
 [1] colorspace_1.3-0 scales_0.4.1     assertthat_0.1   lazyeval_0.2.0  
 [5] plyr_1.8.4       tools_3.3.2      inline_0.3.14    gtable_0.2.0    
 [9] tibble_1.2       gridExtra_2.2.1  Rcpp_0.12.7      grid_3.3.2      
[13] methods_3.3.2    stats4_3.3.2     munsell_0.4.3   
structure(list(Tube = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 
24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 34L, 35L, 36L, 37L, 
38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 
51L, 52L, 53L, 54L, 55L, 57L, 58L, 59L, 60L, 61L, 63L, 64L, 65L, 
66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 
79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 
92L, 93L, 94L, 95L), Tube_alias = 1:92), .Names = c("Tube", "Tube_alias"
), row.names = c(NA, -92L), class = "data.frame")
   Tube Tube_alias
1     1          1
2     2          2
3     3          3
4     4          4
5     5          5
6     6          6
7     7          7
8     8          8
9     9          9
10   10         10
11   11         11
12   12         12
13   13         13
14   14         14
15   15         15
16   16         16
17   17         17
18   18         18
19   19         19
20   20         20
21   21         21
22   22         22
23   23         23
24   24         24
25   25         25
26   26         26
27   27         27
28   28         28
29   29         29
30   30         30
31   31         31
32   32         32
33   34         33
34   35         34
35   36         35
36   37         36
37   38         37
38   39         38
39   40         39
40   41         40
41   42         41
42   43         42
43   44         43
44   45         44
45   46         45
46   47         46
47   48         47
48   49         48
49   50         49
50   51         50
51   52         51
52   53         52
53   54         53
54   55         54
55   57         55
56   58         56
57   59         57
58   60         58
59   61         59
60   63         60
61   64         61
62   65         62
63   66         63
64   67         64
65   68         65
66   69         66
67   70         67
68   71         68
69   72         69
70   73         70
71   74         71
72   75         72
73   76         73
74   77         74
75   78         75
76   79         76
77   80         77
78   81         78
79   82         79
80   83         80
81   84         81
82   85         82
83   86         83
84   87         84
85   88         85
86   89         86
87   90         87
88   91         88
89   92         89
90   93         90
91   94         91
92   95         92
[1] "Using data from 2011 , session 4"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          1        24                1
Switchgrass     2   Switchgrass         49        72               48
Miscanthus      3    Miscanthus         25        48               25
Prairie         4       Prairie         73        95               70
              last_tube_alias n_tubes
Maize-Soybean              24      24
Switchgrass                69      22
Miscanthus                 47      23
Prairie                    92      23
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.
starting worker pid=33076 on localhost:11451 at 09:37:13.355
starting worker pid=33084 on localhost:11451 at 09:37:13.543
starting worker pid=33092 on localhost:11451 at 09:37:13.775
starting worker pid=33101 on localhost:11451 at 09:37:13.966
starting worker pid=33109 on localhost:11451 at 09:37:14.149

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 68.6041 seconds (Warm-up)
               377.041 seconds (Sampling)
               445.645 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 2
                                                                                            count
Exception thrown at line 150: lognormal_log: Scale parameter[1] is inf, but must be finite!     6
Exception thrown at line 150: lognormal_log: Scale parameter[3] is inf, but must be finite!     3
Exception thrown at line 140: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 66.4098 seconds (Warm-up)
               386.323 seconds (Sampling)
               452.732 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 1
                                                                                            count
Exception thrown at line 150: lognormal_log: Scale parameter[1] is inf, but must be finite!     6
Exception thrown at line 150: lognormal_log: Scale parameter[3] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 72.7777 seconds (Warm-up)
               383.704 seconds (Sampling)
               456.482 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 3
                                                                                            count
Exception thrown at line 150: lognormal_log: Scale parameter[1] is inf, but must be finite!     6
Exception thrown at line 140: normal_log: Scale parameter is 0, but must be > 0!                1
Exception thrown at line 150: lognormal_log: Scale parameter[2] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 93.4291 seconds (Warm-up)
               373.352 seconds (Sampling)
               466.781 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 5
                                                                                            count
Exception thrown at line 150: lognormal_log: Scale parameter[1] is inf, but must be finite!     8
Exception thrown at line 140: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 91.7172 seconds (Warm-up)
               377.507 seconds (Sampling)
               469.225 seconds (Total)

The following numerical problems occured the indicated number of times after warmup on chain 4
                                                                                            count
Exception thrown at line 150: lognormal_log: Scale parameter[2] is inf, but must be finite!     5
Exception thrown at line 150: lognormal_log: Scale parameter[1] is 0, but must be > 0!          2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.
NULL
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean   sd     2.5%      25%      50%      75%
loc_detect             -8.15    0.01 0.73    -9.91    -8.48    -8.01    -7.67
scale_detect            0.97    0.00 0.26     0.62     0.79     0.92     1.08
loc_surface[1]         12.16    0.04 5.62    -0.12     8.91    12.31    15.72
loc_surface[2]         14.63    0.02 3.42     8.00    12.38    14.59    16.85
loc_surface[3]         10.42    0.04 5.07     0.52     7.18    10.29    13.57
loc_surface[4]         11.43    0.02 2.91     6.28     9.36    11.25    13.26
scale_surface[1]        7.63    0.03 3.75     3.00     5.17     6.73     9.06
scale_surface[2]        5.16    0.01 1.42     3.12     4.20     4.92     5.84
scale_surface[3]        7.21    0.03 3.55     2.31     4.80     6.50     8.82
scale_surface[4]        3.77    0.01 1.25     1.81     2.91     3.61     4.42
intercept[1]           -5.09    0.00 0.14    -5.36    -5.18    -5.09    -5.00
intercept[2]           -4.81    0.00 0.14    -5.07    -4.90    -4.81    -4.72
intercept[3]           -5.45    0.00 0.13    -5.70    -5.53    -5.45    -5.36
intercept[4]           -4.99    0.00 0.13    -5.24    -5.07    -4.98    -4.90
b_depth[1]             -0.02    0.00 0.18    -0.40    -0.14    -0.01     0.11
b_depth[2]             -0.70    0.00 0.16    -1.03    -0.81    -0.70    -0.59
b_depth[3]             -0.31    0.00 0.15    -0.62    -0.41    -0.30    -0.21
b_depth[4]             -0.54    0.00 0.14    -0.82    -0.63    -0.53    -0.44
sig_tube                0.51    0.00 0.06     0.41     0.47     0.50     0.54
sigma[1]                1.56    0.00 0.06     1.45     1.52     1.56     1.60
sigma[2]                1.42    0.00 0.05     1.33     1.39     1.42     1.46
sigma[3]                1.36    0.00 0.05     1.27     1.33     1.36     1.39
sigma[4]                1.29    0.00 0.05     1.21     1.26     1.29     1.33
crop_tot[1]             0.82    0.00 0.13     0.61     0.73     0.81     0.89
crop_tot[2]             1.65    0.00 0.42     1.06     1.36     1.57     1.85
crop_tot[3]             0.63    0.00 0.11     0.46     0.56     0.62     0.69
crop_tot[4]             1.17    0.00 0.22     0.83     1.01     1.13     1.28
crop_tot_diff[1]        0.83    0.00 0.44     0.17     0.53     0.76     1.05
crop_tot_diff[2]       -0.19    0.00 0.17    -0.52    -0.29    -0.18    -0.08
crop_tot_diff[3]        0.35    0.00 0.25    -0.10     0.18     0.33     0.49
crop_int_diff[1]        0.28    0.00 0.19    -0.10     0.15     0.28     0.41
crop_int_diff[2]       -0.36    0.00 0.19    -0.73    -0.49    -0.36    -0.23
crop_int_diff[3]        0.10    0.00 0.19    -0.27    -0.02     0.10     0.23
crop_bdepth_diff[1]    -0.68    0.00 0.25    -1.16    -0.85    -0.68    -0.52
crop_bdepth_diff[2]    -0.29    0.00 0.24    -0.76    -0.45    -0.30    -0.14
crop_bdepth_diff[3]    -0.52    0.00 0.23    -0.97    -0.68    -0.52    -0.37
lp__                -1665.52    0.12 8.78 -1683.88 -1671.20 -1665.17 -1659.39
                       97.5% n_eff Rhat
loc_detect             -7.17  8768    1
scale_detect            1.60  8866    1
loc_surface[1]         22.85 20000    1
loc_surface[2]         21.48 20000    1
loc_surface[3]         20.79 18149    1
loc_surface[4]         17.63 20000    1
scale_surface[1]       17.67 20000    1
scale_surface[2]        8.59 20000    1
scale_surface[3]       16.09 20000    1
scale_surface[4]        6.62 20000    1
intercept[1]           -4.81 12825    1
intercept[2]           -4.54 12101    1
intercept[3]           -5.18 12244    1
intercept[4]           -4.74 11302    1
b_depth[1]              0.32 20000    1
b_depth[2]             -0.39 20000    1
b_depth[3]             -0.05 20000    1
b_depth[4]             -0.28 20000    1
sig_tube                0.62 13477    1
sigma[1]                1.68 20000    1
sigma[2]                1.53 20000    1
sigma[3]                1.46 20000    1
sigma[4]                1.39 20000    1
crop_tot[1]             1.10 13267    1
crop_tot[2]             2.70 20000    1
crop_tot[3]             0.89 13346    1
crop_tot[4]             1.69 14487    1
crop_tot_diff[1]        1.89 20000    1
crop_tot_diff[2]        0.13 12695    1
crop_tot_diff[3]        0.90 14263    1
crop_int_diff[1]        0.66 12808    1
crop_int_diff[2]        0.01 12581    1
crop_int_diff[3]        0.47 12308    1
crop_bdepth_diff[1]    -0.19 20000    1
crop_bdepth_diff[2]     0.17 20000    1
crop_bdepth_diff[3]    -0.06 20000    1
lp__                -1649.33  5624    1

Samples were drawn using NUTS(diag_e) at Sat Nov 19 09:45:17 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.03    0.00 0.09  0.00  0.00  0.01  0.02  0.17 20000
y_pred[15]            0.03    0.00 0.08  0.00  0.00  0.01  0.03  0.17 19964
y_pred[28]            0.02    0.00 0.08  0.00  0.00  0.01  0.02  0.15 19966
mu_pred[1]           -1.95    0.01 0.86 -3.64 -2.53 -1.96 -1.37 -0.28 20000
mu_pred[15]          -4.42    0.00 0.55 -5.48 -4.79 -4.42 -4.06 -3.35 19002
mu_pred[28]          -5.08    0.00 0.53 -6.12 -5.44 -5.09 -4.73 -4.03 19564
mu_obs_pred[1]       -4.77    0.00 0.65 -6.06 -5.20 -4.77 -4.34 -3.51 20000
mu_obs_pred[15]      -4.53    0.00 0.54 -5.58 -4.89 -4.53 -4.17 -3.47 19084
mu_obs_pred[28]      -5.12    0.00 0.53 -6.16 -5.47 -5.12 -4.77 -4.07 19561
detect_odds_pred[1]   0.96    0.00 0.03  0.89  0.95  0.97  0.98  0.99 20000
detect_odds_pred[15]  0.97    0.00 0.02  0.93  0.97  0.98  0.99  0.99 19066
detect_odds_pred[28]  0.95    0.00 0.03  0.88  0.94  0.96  0.97  0.99 17719
pred_tot[1]           1.89    0.01 1.15  0.54  1.11  1.61  2.34  4.82 19936
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Sat Nov 19 09:45:17 2016.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 59.4456140350877"

mean of log(nonzero root volume): -5.123924 

RMSE of mu_obs vs log observed (zeroes excluded):  1.378095 
RMSE/var:  0.5838866 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 1 rows containing missing values (geom_bar). 
Warning message:
Removed 89 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	9m8.234s
user	0m59.165s
sys	0m4.526s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.12.1, packaged: , GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Joining, by = c("term", "estimate", "std.error", "rhat", "ess")
Joining, by = "crop_num"
Joining, by = "parameter"
