Starting current_2012_s2 on  Fri Jun 23 19:34:06 UTC 2017
Running mctd_foursurf.R for year  2012  session  2
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.15.1, packaged: 2017-04-19 05:03:57 UTC, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.2 (2016-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X El Capitan 10.11.6

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.15.1         StanHeaders_2.15.0-1 ggplot2_2.2.1       

loaded via a namespace (and not attached):
 [1] colorspace_1.3-2 scales_0.4.1     lazyeval_0.2.0   plyr_1.8.4      
 [5] inline_0.3.14    gtable_0.2.0     tibble_1.3.3     gridExtra_2.2.1 
 [9] Rcpp_0.12.11     grid_3.3.2       methods_3.3.2    stats4_3.3.2    
[13] rlang_0.1.1      munsell_0.4.3   
structure(list(Tube = c(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 
24L, 25L, 26L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 
38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 47L, 48L, 49L, 50L, 51L, 
52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 63L, 64L, 65L, 
66L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 
80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 
93L, 94L, 95L, 96L), Tube_alias = 1:92), .Names = c("Tube", "Tube_alias"
), row.names = c(NA, -92L), class = "data.frame")
   Tube Tube_alias
1     1          1
2     2          2
3     3          3
4     4          4
5     5          5
6     6          6
7     7          7
8     8          8
9     9          9
10   10         10
11   11         11
12   12         12
13   13         13
14   14         14
15   15         15
16   16         16
17   17         17
18   18         18
19   19         19
20   20         20
21   21         21
22   22         22
23   23         23
24   24         24
25   25         25
26   26         26
27   28         27
28   29         28
29   30         29
30   31         30
31   32         31
32   33         32
33   34         33
34   35         34
35   36         35
36   37         36
37   38         37
38   39         38
39   40         39
40   41         40
41   42         41
42   43         42
43   44         43
44   45         44
45   47         45
46   48         46
47   49         47
48   50         48
49   51         49
50   52         50
51   53         51
52   54         52
53   55         53
54   56         54
55   57         55
56   58         56
57   59         57
58   60         58
59   61         59
60   63         60
61   64         61
62   65         62
63   66         63
64   68         64
65   69         65
66   70         66
67   71         67
68   72         68
69   73         69
70   74         70
71   75         71
72   76         72
73   77         73
74   78         74
75   79         75
76   80         76
77   81         77
78   82         78
79   83         79
80   84         80
81   85         81
82   86         82
83   87         83
84   88         84
85   89         85
86   90         86
87   91         87
88   92         88
89   93         89
90   94         90
91   95         91
92   96         92
[1] "Using data from 2012 , session 2"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          1        24                1
Switchgrass     2   Switchgrass         49        72               47
Miscanthus      3    Miscanthus         25        48               25
Prairie         4       Prairie         73        96               69
              last_tube_alias n_tubes
Maize-Soybean              24      24
Switchgrass                68      22
Miscanthus                 46      22
Prairie                    92      24
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 51.7303 seconds (Warm-up)
               178.145 seconds (Sampling)
               229.876 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 2
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     5
Exception thrown at line 139: lognormal_log: Scale parameter[4] is inf, but must be finite!     3
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 54.6642 seconds (Warm-up)
               179.92 seconds (Sampling)
               234.584 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 5
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     4
Exception thrown at line 139: lognormal_log: Scale parameter[4] is inf, but must be finite!     4
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 52.3415 seconds (Warm-up)
               185.913 seconds (Sampling)
               238.254 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 1
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[4] is inf, but must be finite!     4
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     2
Exception thrown at line 139: lognormal_log: Scale parameter[9] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 58.3722 seconds (Warm-up)
               178.7 seconds (Sampling)
               237.072 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 4
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     3
Exception thrown at line 139: lognormal_log: Scale parameter[1] is 0, but must be > 0!          2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 57.5891 seconds (Warm-up)
               205.947 seconds (Sampling)
               263.536 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 3
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     5
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                1
Exception thrown at line 139: lognormal_log: Scale parameter[9] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.
NULL
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean    sd     2.5%      25%      50%      75%
loc_detect             -6.11    0.00  0.10    -6.31    -6.18    -6.11    -6.04
scale_detect            0.62    0.00  0.08     0.47     0.56     0.62     0.68
loc_surface[1]         14.69    0.02  2.58     9.92    12.87    14.61    16.38
loc_surface[2]         27.05    0.02  2.64    21.69    25.33    27.11    28.89
loc_surface[3]         16.57    0.10  8.63    -1.05    10.84    16.88    22.65
loc_surface[4]         21.58    0.04  4.02    13.72    18.90    21.56    24.26
scale_surface[1]        3.19    0.01  0.73     1.91     2.68     3.14     3.65
scale_surface[2]        5.35    0.01  0.67     4.19     4.88     5.30     5.77
scale_surface[3]       10.89    0.03  2.74     5.16     9.24    10.87    12.55
scale_surface[4]        6.77    0.01  1.23     4.64     5.91     6.66     7.52
intercept[1]           -6.61    0.00  0.19    -6.99    -6.73    -6.60    -6.48
intercept[2]           -5.02    0.00  0.15    -5.30    -5.12    -5.02    -4.92
intercept[3]           -5.69    0.00  0.15    -5.99    -5.79    -5.69    -5.59
intercept[4]           -5.35    0.00  0.14    -5.62    -5.44    -5.35    -5.27
b_depth[1]             -1.22    0.00  0.21    -1.66    -1.35    -1.21    -1.07
b_depth[2]             -1.27    0.00  0.21    -1.68    -1.41    -1.27    -1.13
b_depth[3]             -0.40    0.00  0.21    -0.85    -0.53    -0.39    -0.26
b_depth[4]             -0.94    0.00  0.18    -1.31    -1.05    -0.93    -0.81
sig_tube                0.51    0.00  0.08     0.37     0.46     0.51     0.56
sigma[1]                2.16    0.00  0.13     1.93     2.07     2.16     2.25
sigma[2]                1.80    0.00  0.08     1.65     1.74     1.80     1.85
sigma[3]                1.81    0.00  0.08     1.65     1.75     1.80     1.86
sigma[4]                1.72    0.00  0.07     1.59     1.67     1.71     1.76
crop_tot[1]             0.71    0.00  0.41     0.34     0.48     0.61     0.82
crop_tot[2]             4.10    0.03  2.64     1.47     2.44     3.39     4.86
crop_tot[3]             0.55    0.00  0.16     0.35     0.45     0.52     0.61
crop_tot[4]             1.43    0.01  0.60     0.75     1.04     1.28     1.65
crop_tot_diff[1]        3.38    0.02  2.65     0.61     1.76     2.69     4.17
crop_tot_diff[2]       -0.16    0.01  0.44    -1.17    -0.30    -0.09     0.07
crop_tot_diff[3]        0.71    0.01  0.70    -0.43     0.35     0.64     1.00
crop_int_diff[1]        1.59    0.00  0.25     1.14     1.42     1.58     1.75
crop_int_diff[2]        0.92    0.00  0.21     0.52     0.77     0.91     1.06
crop_int_diff[3]        1.25    0.00  0.22     0.85     1.10     1.25     1.40
crop_bdepth_diff[1]    -0.05    0.00  0.28    -0.58    -0.24    -0.06     0.13
crop_bdepth_diff[2]     0.82    0.00  0.29     0.27     0.62     0.82     1.01
crop_bdepth_diff[3]     0.28    0.00  0.25    -0.19     0.11     0.27     0.45
lp__                -2175.17    0.28 12.59 -2199.78 -2183.62 -2175.15 -2166.81
                       97.5% n_eff Rhat
loc_detect             -5.92  2947    1
scale_detect            0.80  2232    1
loc_surface[1]         20.02 11249    1
loc_surface[2]         32.07 13751    1
loc_surface[3]         32.45  7256    1
loc_surface[4]         29.46 10520    1
scale_surface[1]        4.75  8141    1
scale_surface[2]        6.81  7350    1
scale_surface[3]       16.40  7195    1
scale_surface[4]        9.47 12182    1
intercept[1]           -6.26  3021    1
intercept[2]           -4.71  5459    1
intercept[3]           -5.39  4250    1
intercept[4]           -5.09  4714    1
b_depth[1]             -0.84  3613    1
b_depth[2]             -0.88 12193    1
b_depth[3]             -0.03  7419    1
b_depth[4]             -0.60  8586    1
sig_tube                0.67  2427    1
sigma[1]                2.43 20000    1
sigma[2]                1.96 20000    1
sigma[3]                1.97 20000    1
sigma[4]                1.85 20000    1
crop_tot[1]             1.68  6780    1
crop_tot[2]            11.13 10140    1
crop_tot[3]             0.95  7198    1
crop_tot[4]             2.98  7507    1
crop_tot_diff[1]       10.38 11403    1
crop_tot_diff[2]        0.40  6989    1
crop_tot_diff[3]        2.28  9913    1
crop_int_diff[1]        2.10  3048    1
crop_int_diff[2]        1.35  3958    1
crop_int_diff[3]        1.70  3127    1
crop_bdepth_diff[1]     0.53  7620    1
crop_bdepth_diff[2]     1.41  5726    1
crop_bdepth_diff[3]     0.80  8365    1
lp__                -2150.21  2023    1

Samples were drawn using NUTS(diag_e) at Fri Jun 23 15:38:42 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.05    0.00 0.25  0.00  0.00  0.01  0.03  0.38 20000
y_pred[15]            0.03    0.00 0.19  0.00  0.00  0.00  0.02  0.19 20000
y_pred[28]            0.01    0.00 0.11  0.00  0.00  0.00  0.00  0.10 20000
mu_pred[1]            0.23    0.01 1.03 -1.76 -0.47  0.22  0.92  2.30 11728
mu_pred[15]          -4.33    0.00 0.58 -5.49 -4.71 -4.34 -3.95 -3.19 15411
mu_pred[28]          -6.13    0.00 0.55 -7.23 -6.48 -6.12 -5.76 -5.07 16739
mu_obs_pred[1]       -4.70    0.01 0.67 -6.06 -5.14 -4.69 -4.25 -3.39 15204
mu_obs_pred[15]      -5.09    0.00 0.56 -6.20 -5.45 -5.09 -4.73 -4.01 17815
mu_obs_pred[28]      -6.13    0.00 0.55 -7.23 -6.48 -6.12 -5.76 -5.07 16752
detect_odds_pred[1]   0.87    0.00 0.12  0.53  0.82  0.91  0.96  0.99 12496
detect_odds_pred[15]  0.81    0.00 0.13  0.47  0.74  0.84  0.90  0.97 17930
detect_odds_pred[28]  0.49    0.00 0.19  0.15  0.35  0.49  0.63  0.84 18710
pred_tot[1]           4.67    0.04 4.33  0.92  2.15  3.46  5.67 15.75 13335
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Fri Jun 23 15:38:42 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 62.3057986870897"

mean of log(nonzero root volume): -5.428764 

RMSE of mu_obs vs log observed (zeroes excluded):  1.802194 
RMSE/var:  0.4812456 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 1 rows containing missing values (geom_bar). 
Warning message:
Removed 717 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	5m34.225s
user	20m56.571s
sys	0m10.881s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.15.1, packaged: 2017-04-19 05:03:57 UTC, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Joining, by = c("term", "estimate", "std.error", "rhat", "ess")
Joining, by = "crop_num"
Joining, by = "parameter"
