Starting current_2010_s4 on  Thu Jan 12 21:58:19 UTC 2017
Running mctd_foursurf.R for year  2010  session  4
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.14.1, packaged: 2016-12-28 14:55:41 UTC, GitRev: 5fa1e80eb817)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.2 (2016-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X El Capitan 10.11.6

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.14.1       StanHeaders_2.14.0 ggplot2_2.2.1     

loaded via a namespace (and not attached):
 [1] colorspace_1.3-2 scales_0.4.1     assertthat_0.1   lazyeval_0.2.0  
 [5] plyr_1.8.4       tools_3.3.2      inline_0.3.14    gtable_0.2.0    
 [9] tibble_1.2       gridExtra_2.2.1  Rcpp_0.12.8      grid_3.3.2      
[13] methods_3.3.2    stats4_3.3.2     munsell_0.4.3   
structure(list(Tube = c(1L, 2L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 
11L, 12L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 
26L, 27L, 29L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 
42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 51L, 52L, 53L, 54L, 55L, 
56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 69L, 70L, 71L, 72L, 
73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 
86L, 87L, 88L, 89L, 91L, 92L, 93L, 94L, 95L, 96L), Tube_alias = 1:84), .Names = c("Tube", 
"Tube_alias"), row.names = c(NA, -84L), class = "data.frame")
   Tube Tube_alias
1     1          1
2     2          2
3     4          3
4     5          4
5     6          5
6     7          6
7     8          7
8     9          8
9    10          9
10   11         10
11   12         11
12   14         12
13   15         13
14   16         14
15   17         15
16   18         16
17   19         17
18   20         18
19   21         19
20   22         20
21   23         21
22   24         22
23   26         23
24   27         24
25   29         25
26   32         26
27   33         27
28   34         28
29   35         29
30   36         30
31   37         31
32   38         32
33   39         33
34   40         34
35   41         35
36   42         36
37   43         37
38   44         38
39   45         39
40   46         40
41   47         41
42   48         42
43   49         43
44   51         44
45   52         45
46   53         46
47   54         47
48   55         48
49   56         49
50   57         50
51   58         51
52   59         52
53   60         53
54   61         54
55   62         55
56   63         56
57   64         57
58   69         58
59   70         59
60   71         60
61   72         61
62   73         62
63   74         63
64   75         64
65   76         65
66   77         66
67   78         67
68   79         68
69   80         69
70   81         70
71   82         71
72   83         72
73   84         73
74   85         74
75   86         75
76   87         76
77   88         77
78   89         78
79   91         79
80   92         80
81   93         81
82   94         82
83   95         83
84   96         84
[1] "Using data from 2010 , session 4"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          1        24                1
Switchgrass     2   Switchgrass         49        72               43
Miscanthus      3    Miscanthus         26        48               23
Prairie         4       Prairie         73        96               62
              last_tube_alias n_tubes
Maize-Soybean              22      22
Switchgrass                61      19
Miscanthus                 42      20
Prairie                    84      23
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 39.6376 seconds (Warm-up)
               132.43 seconds (Sampling)
               172.067 seconds (Total)

The following numerical problems occured the indicated number of times on chain 1
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     7
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 38.1943 seconds (Warm-up)
               132.624 seconds (Sampling)
               170.818 seconds (Total)

The following numerical problems occured the indicated number of times on chain 4
                                                                                             count
Exception thrown at line 139: lognormal_log: Scale parameter[8] is inf, but must be finite!      4
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                 1
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!      1
Exception thrown at line 139: lognormal_log: Scale parameter[16] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 39.3552 seconds (Warm-up)
               132.291 seconds (Sampling)
               171.646 seconds (Total)

The following numerical problems occured the indicated number of times on chain 3
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[2] is inf, but must be finite!     6
Exception thrown at line 139: lognormal_log: Scale parameter[1] is 0, but must be > 0!          1
Exception thrown at line 139: lognormal_log: Scale parameter[8] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 45.7152 seconds (Warm-up)
               132.463 seconds (Sampling)
               178.178 seconds (Total)

The following numerical problems occured the indicated number of times on chain 2
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[2] is inf, but must be finite!     7
Exception thrown at line 139: lognormal_log: Scale parameter[1] is 0, but must be > 0!          2
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.

Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 44.2308 seconds (Warm-up)
               155.509 seconds (Sampling)
               199.74 seconds (Total)

The following numerical problems occured the indicated number of times on chain 5
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[2] is inf, but must be finite!     8
Exception thrown at line 139: lognormal_log: Scale parameter[1] is 0, but must be > 0!          1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, do not ask about this message on stan-users.
NULL
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean    sd     2.5%      25%      50%      75%
loc_detect             -6.17    0.00  0.09    -6.36    -6.23    -6.17    -6.10
scale_detect            0.97    0.00  0.16     0.69     0.85     0.95     1.06
loc_surface[1]         21.54    0.11 11.24    -1.60    13.99    22.01    29.81
loc_surface[2]         15.20    0.02  2.54    10.36    13.48    15.17    16.88
loc_surface[3]         13.92    0.04  4.31     6.43    10.92    13.61    16.66
loc_surface[4]         15.74    0.04  3.99     8.00    12.96    15.75    18.44
scale_surface[1]       17.10    0.05  5.45     9.27    13.16    16.20    20.19
scale_surface[2]        3.29    0.00  0.67     2.18     2.83     3.22     3.68
scale_surface[3]        4.97    0.02  2.04     2.13     3.59     4.62     5.93
scale_surface[4]        4.55    0.01  1.31     2.19     3.70     4.46     5.31
intercept[1]           -5.66    0.00  0.20    -6.05    -5.80    -5.67    -5.53
intercept[2]           -5.44    0.00  0.19    -5.81    -5.57    -5.44    -5.31
intercept[3]           -6.03    0.00  0.19    -6.41    -6.16    -6.03    -5.91
intercept[4]           -5.90    0.00  0.18    -6.26    -6.02    -5.90    -5.79
b_depth[1]              0.07    0.00  0.26    -0.54    -0.08     0.11     0.26
b_depth[2]             -0.90    0.00  0.19    -1.28    -1.03    -0.90    -0.78
b_depth[3]             -0.68    0.00  0.20    -1.10    -0.81    -0.67    -0.55
b_depth[4]             -0.82    0.00  0.20    -1.25    -0.96    -0.82    -0.68
sig_tube                0.70    0.00  0.09     0.53     0.63     0.69     0.76
sigma[1]                1.51    0.00  0.09     1.34     1.45     1.51     1.57
sigma[2]                1.76    0.00  0.09     1.60     1.70     1.76     1.82
sigma[3]                1.62    0.00  0.09     1.46     1.56     1.61     1.67
sigma[4]                1.81    0.00  0.09     1.64     1.75     1.80     1.87
crop_tot[1]             0.47    0.00  0.14     0.30     0.39     0.45     0.52
crop_tot[2]             1.18    0.00  0.46     0.62     0.87     1.08     1.36
crop_tot[3]             0.49    0.00  0.18     0.28     0.38     0.45     0.55
crop_tot[4]             0.67    0.00  0.27     0.35     0.49     0.61     0.77
crop_tot_diff[1]        0.71    0.00  0.48     0.07     0.40     0.61     0.91
crop_tot_diff[2]        0.02    0.00  0.22    -0.36    -0.10     0.01     0.12
crop_tot_diff[3]        0.20    0.00  0.30    -0.25     0.02     0.15     0.32
crop_int_diff[1]        0.23    0.00  0.27    -0.30     0.05     0.23     0.40
crop_int_diff[2]       -0.37    0.00  0.27    -0.91    -0.55    -0.36    -0.18
crop_int_diff[3]       -0.24    0.00  0.26    -0.78    -0.41    -0.24    -0.06
crop_bdepth_diff[1]    -0.97    0.00  0.33    -1.56    -1.19    -1.00    -0.77
crop_bdepth_diff[2]    -0.75    0.00  0.33    -1.36    -0.98    -0.77    -0.55
crop_bdepth_diff[3]    -0.89    0.00  0.34    -1.51    -1.12    -0.91    -0.69
lp__                -1874.83    0.20 11.03 -1896.80 -1882.05 -1874.58 -1867.44
                       97.5% n_eff Rhat
loc_detect             -5.99  6584    1
scale_detect            1.33  3210    1
loc_surface[1]         41.26  9791    1
loc_surface[2]         20.23 16241    1
loc_surface[3]         23.22 13158    1
loc_surface[4]         23.62 10496    1
scale_surface[1]       29.98 10768    1
scale_surface[2]        4.77 20000    1
scale_surface[3]        9.99 14949    1
scale_surface[4]        7.44 15015    1
intercept[1]           -5.24  6571    1
intercept[2]           -5.05  6249    1
intercept[3]           -5.66  5874    1
intercept[4]           -5.56  6079    1
b_depth[1]              0.49  7478    1
b_depth[2]             -0.54 20000    1
b_depth[3]             -0.32 15438    1
b_depth[4]             -0.45 13490    1
sig_tube                0.90  3697    1
sigma[1]                1.70 20000    1
sigma[2]                1.95 20000    1
sigma[3]                1.79 20000    1
sigma[4]                1.99 20000    1
crop_tot[1]             0.77  7074    1
crop_tot[2]             2.33 11893    1
crop_tot[3]             0.92  9664    1
crop_tot[4]             1.36  9939    1
crop_tot_diff[1]        1.87 11390    1
crop_tot_diff[2]        0.48  8741    1
crop_tot_diff[3]        0.91  9516    1
crop_int_diff[1]        0.75  6161    1
crop_int_diff[2]        0.14  6301    1
crop_int_diff[3]        0.27  6422    1
crop_bdepth_diff[1]    -0.27  9388    1
crop_bdepth_diff[2]    -0.05  9296    1
crop_bdepth_diff[3]    -0.18  8650    1
lp__                -1853.47  2901    1

Samples were drawn using NUTS(diag_e) at Thu Jan 12 17:01:50 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.01    0.00 0.08  0.00  0.00  0.00  0.00  0.07 20000
y_pred[15]            0.03    0.00 0.30  0.00  0.00  0.00  0.01  0.18 20000
y_pred[28]            0.01    0.00 0.09  0.00  0.00  0.00  0.00  0.05 20000
mu_pred[1]           -1.76    0.01 1.05 -3.77 -2.47 -1.76 -1.07  0.32 20000
mu_pred[15]          -5.05    0.01 0.75 -6.53 -5.55 -5.05 -4.55 -3.56 17982
mu_pred[28]          -5.68    0.01 0.75 -7.17 -6.18 -5.68 -5.19 -4.18 16445
mu_obs_pred[1]       -6.17    0.01 0.86 -7.89 -6.73 -6.16 -5.60 -4.50 17470
mu_obs_pred[15]      -5.37    0.01 0.74 -6.85 -5.86 -5.37 -4.88 -3.92 18570
mu_obs_pred[28]      -5.98    0.01 0.74 -7.44 -6.46 -5.98 -5.50 -4.53 17783
detect_odds_pred[1]   0.50    0.00 0.19  0.15  0.36  0.50  0.64  0.86 18226
detect_odds_pred[15]  0.68    0.00 0.15  0.34  0.58  0.70  0.80  0.92 17370
detect_odds_pred[28]  0.54    0.00 0.17  0.21  0.42  0.55  0.67  0.85 17688
pred_tot[1]           1.52    0.01 1.50  0.25  0.66  1.10  1.86  5.22 17486
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Thu Jan 12 17:01:50 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 58.8407079646018"

mean of log(nonzero root volume): -5.659529 

RMSE of mu_obs vs log observed (zeroes excluded):  1.649189 
RMSE/var:  0.4763239 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 697 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	4m27.546s
user	15m48.705s
sys	0m6.505s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.14.1, packaged: 2016-12-28 14:55:41 UTC, GitRev: 5fa1e80eb817)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Joining, by = c("term", "estimate", "std.error", "rhat", "ess")
Joining, by = "crop_num"
Joining, by = "parameter"
