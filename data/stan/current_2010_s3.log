Starting current_2010_s3 on  Fri Jun 23 19:04:21 UTC 2017
Running mctd_foursurf.R for year  2010  session  3
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.15.1, packaged: 2017-04-19 05:03:57 UTC, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
R version 3.3.2 (2016-10-31)
Platform: x86_64-apple-darwin13.4.0 (64-bit)
Running under: OS X El Capitan 10.11.6

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  base     

other attached packages:
[1] rstan_2.15.1         StanHeaders_2.15.0-1 ggplot2_2.2.1       

loaded via a namespace (and not attached):
 [1] colorspace_1.3-2 scales_0.4.1     lazyeval_0.2.0   plyr_1.8.4      
 [5] inline_0.3.14    gtable_0.2.0     tibble_1.3.3     gridExtra_2.2.1 
 [9] Rcpp_0.12.11     grid_3.3.2       methods_3.3.2    stats4_3.3.2    
[13] rlang_0.1.1      munsell_0.4.3   
structure(list(Tube = c(2L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 
14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 
27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 
40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 51L, 52L, 53L, 
54L, 55L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 66L, 69L, 70L, 
71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 
84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L
), Tube_alias = 1:87), .Names = c("Tube", "Tube_alias"), row.names = c(NA, 
-87L), class = "data.frame")
   Tube Tube_alias
1     2          1
2     6          2
3     7          3
4     8          4
5     9          5
6    10          6
7    11          7
8    12          8
9    13          9
10   14         10
11   15         11
12   16         12
13   17         13
14   18         14
15   19         15
16   20         16
17   21         17
18   22         18
19   23         19
20   24         20
21   25         21
22   26         22
23   27         23
24   28         24
25   29         25
26   30         26
27   31         27
28   32         28
29   33         29
30   34         30
31   35         31
32   36         32
33   37         33
34   38         34
35   39         35
36   40         36
37   41         37
38   42         38
39   43         39
40   44         40
41   45         41
42   46         42
43   47         43
44   48         44
45   49         45
46   51         46
47   52         47
48   53         48
49   54         49
50   55         50
51   57         51
52   58         52
53   59         53
54   60         54
55   61         55
56   62         56
57   63         57
58   64         58
59   66         59
60   69         60
61   70         61
62   71         62
63   72         63
64   73         64
65   74         65
66   75         66
67   76         67
68   77         68
69   78         69
70   79         70
71   80         71
72   81         72
73   82         73
74   83         74
75   84         75
76   85         76
77   86         77
78   87         78
79   88         79
80   89         80
81   90         81
82   91         82
83   92         83
84   93         84
85   94         85
86   95         86
87   96         87
[1] "Using data from 2010 , session 3"
[1] "Crop name-to-number key:"
              num          name first_tube last_tube first_tube_alias
Maize-Soybean   1 Maize-Soybean          2        24                1
Switchgrass     2   Switchgrass         49        72               45
Miscanthus      3    Miscanthus         25        48               21
Prairie         4       Prairie         73        96               64
              last_tube_alias n_tubes
Maize-Soybean              20      20
Switchgrass                63      19
Miscanthus                 44      24
Prairie                    87      24
[1] "conditions for predicted data:"
   tube depth       Species
1     1     1   Switchgrass
2     2     1    Miscanthus
3     3     1       Prairie
4     4     1 Maize-Soybean
5     1     8   Switchgrass
6     2     8    Miscanthus
7     3     8       Prairie
8     4     8 Maize-Soybean
9     1    15   Switchgrass
10    2    15    Miscanthus
11    3    15       Prairie
12    4    15 Maize-Soybean
13    1    21   Switchgrass
14    2    21    Miscanthus
15    3    21       Prairie
16    4    21 Maize-Soybean
17    1    28   Switchgrass
18    2    28    Miscanthus
19    3    28       Prairie
20    4    28 Maize-Soybean
21    1    35   Switchgrass
22    2    35    Miscanthus
23    3    35       Prairie
24    4    35 Maize-Soybean
25    1    42   Switchgrass
26    2    42    Miscanthus
27    3    42       Prairie
28    4    42 Maize-Soybean
29    1    49   Switchgrass
30    2    49    Miscanthus
31    3    49       Prairie
32    4    49 Maize-Soybean
33    1    55   Switchgrass
34    2    55    Miscanthus
35    3    55       Prairie
36    4    55 Maize-Soybean
37    1    62   Switchgrass
38    2    62    Miscanthus
39    3    62       Prairie
40    4    62 Maize-Soybean
41    1    69   Switchgrass
42    2    69    Miscanthus
43    3    69       Prairie
44    4    69 Maize-Soybean
45    1    76   Switchgrass
46    2    76    Miscanthus
47    3    76       Prairie
48    4    76 Maize-Soybean
49    1    82   Switchgrass
50    2    82    Miscanthus
51    3    82       Prairie
52    4    82 Maize-Soybean
53    1    89   Switchgrass
54    2    89    Miscanthus
55    3    89       Prairie
56    4    89 Maize-Soybean
57    1    96   Switchgrass
58    2    96    Miscanthus
59    3    96       Prairie
60    4    96 Maize-Soybean
61    1   103   Switchgrass
62    2   103    Miscanthus
63    3   103       Prairie
64    4   103 Maize-Soybean
65    1   110   Switchgrass
66    2   110    Miscanthus
67    3   110       Prairie
68    4   110 Maize-Soybean
69    1   116   Switchgrass
70    2   116    Miscanthus
71    3   116       Prairie
72    4   116 Maize-Soybean
73    1   123   Switchgrass
74    2   123    Miscanthus
75    3   123       Prairie
76    4   123 Maize-Soybean
77    1   130   Switchgrass
78    2   130    Miscanthus
79    3   130       Prairie
80    4   130 Maize-Soybean

TRANSLATING MODEL 'mctd_foursurf' FROM Stan CODE TO C++ CODE NOW.
successful in parsing the Stan model 'mctd_foursurf'.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 1).

Chain 1, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 2).

Chain 2, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 3).

Chain 3, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 4).

Chain 4, Iteration:    1 / 5000 [  0%]  (Warmup)
CHECKING DATA AND PREPROCESSING FOR MODEL 'mctd_foursurf' NOW.

COMPILING MODEL 'mctd_foursurf' NOW.

STARTING SAMPLER FOR MODEL 'mctd_foursurf' NOW.

SAMPLING FOR MODEL 'mctd_foursurf' NOW (CHAIN 5).

Chain 5, Iteration:    1 / 5000 [  0%]  (Warmup)
Chain 1, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 2, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 4, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 5, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 3, Iteration:  500 / 5000 [ 10%]  (Warmup)
Chain 1, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 1, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 2, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 2, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 4, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 4, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 3, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 3, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 5, Iteration: 1000 / 5000 [ 20%]  (Warmup)
Chain 5, Iteration: 1001 / 5000 [ 20%]  (Sampling)
Chain 1, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 2, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 5, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 3, Iteration: 1500 / 5000 [ 30%]  (Sampling)
Chain 4, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 1, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 5, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 4, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 3, Iteration: 2000 / 5000 [ 40%]  (Sampling)
Chain 2, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 5, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 4, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 1, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 5, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 2, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 3, Iteration: 2500 / 5000 [ 50%]  (Sampling)
Chain 1, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 5, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 2, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 4, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 5, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 3000 / 5000 [ 60%]  (Sampling)
Chain 4, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 2, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 1, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 5, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 4, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 41.7754 seconds (Warm-up)
               144.061 seconds (Sampling)
               185.836 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 4
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[4] is inf, but must be finite!     8
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                1
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 2, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 3500 / 5000 [ 70%]  (Sampling)
Chain 1, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 41.7563 seconds (Warm-up)
               155.131 seconds (Sampling)
               196.887 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 1
                                                                                             count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!      5
Exception thrown at line 139: lognormal_log: Scale parameter[17] is inf, but must be finite!     4
Exception thrown at line 128: normal_log: Scale parameter is 0, but must be > 0!                 1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 5, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 47.1628 seconds (Warm-up)
               152.832 seconds (Sampling)
               199.995 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 5
                                                                                             count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!      4
Exception thrown at line 139: lognormal_log: Scale parameter[17] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 2, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 42.0907 seconds (Warm-up)
               164.731 seconds (Sampling)
               206.822 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 2
                                                                                            count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!     7
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.

Chain 3, Iteration: 4000 / 5000 [ 80%]  (Sampling)
Chain 3, Iteration: 4500 / 5000 [ 90%]  (Sampling)
Chain 3, Iteration: 5000 / 5000 [100%]  (Sampling)
 Elapsed Time: 45.8094 seconds (Warm-up)
               216.187 seconds (Sampling)
               261.997 seconds (Total)

The following numerical problems occurred the indicated number of times on chain 3
                                                                                             count
Exception thrown at line 139: lognormal_log: Scale parameter[1] is inf, but must be finite!      6
Exception thrown at line 139: lognormal_log: Scale parameter[17] is inf, but must be finite!     1
Exception thrown at line 139: lognormal_log: Scale parameter[21] is inf, but must be finite!     1
When a numerical problem occurs, the Hamiltonian proposal gets rejected.
See http://mc-stan.org/misc/warnings.html#exception-hamiltonian-proposal-rejected
If the number in the 'count' column is small, there is no need to ask about this message on stan-users.
NULL
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                        mean se_mean    sd     2.5%      25%      50%      75%
loc_detect             -6.98    0.00  0.11    -7.19    -7.06    -6.98    -6.91
scale_detect            0.60    0.00  0.10     0.42     0.53     0.60     0.66
loc_surface[1]         27.64    0.07  5.57    14.90    24.49    28.28    31.49
loc_surface[2]         13.77    0.03  2.93     8.26    11.78    13.68    15.67
loc_surface[3]         24.90    0.03  3.10    18.81    22.83    24.87    26.95
loc_surface[4]         12.79    0.02  2.24     8.72    11.24    12.70    14.21
scale_surface[1]        8.62    0.02  1.43     6.28     7.63     8.47     9.41
scale_surface[2]        3.59    0.01  0.88     2.12     2.98     3.51     4.11
scale_surface[3]        5.71    0.01  0.87     4.21     5.10     5.64     6.24
scale_surface[4]        3.35    0.01  0.76     2.11     2.80     3.26     3.80
intercept[1]           -6.67    0.00  0.18    -7.04    -6.79    -6.67    -6.55
intercept[2]           -6.26    0.00  0.17    -6.58    -6.37    -6.26    -6.15
intercept[3]           -6.65    0.00  0.16    -6.99    -6.76    -6.65    -6.54
intercept[4]           -6.63    0.00  0.15    -6.94    -6.73    -6.63    -6.53
b_depth[1]             -0.85    0.00  0.28    -1.42    -1.03    -0.84    -0.66
b_depth[2]             -1.01    0.00  0.19    -1.42    -1.14    -1.01    -0.88
b_depth[3]             -1.53    0.00  0.24    -2.03    -1.69    -1.52    -1.36
b_depth[4]             -0.88    0.00  0.17    -1.22    -0.98    -0.87    -0.76
sig_tube                0.56    0.00  0.10     0.39     0.50     0.56     0.63
sigma[1]                1.90    0.00  0.11     1.70     1.82     1.89     1.97
sigma[2]                2.19    0.00  0.11     2.00     2.12     2.19     2.26
sigma[3]                2.27    0.00  0.10     2.08     2.20     2.27     2.34
sigma[4]                2.14    0.00  0.10     1.96     2.08     2.14     2.21
crop_tot[1]             0.35    0.00  0.28     0.14     0.21     0.28     0.39
crop_tot[2]             0.61    0.00  0.29     0.30     0.43     0.54     0.70
crop_tot[3]             1.44    0.02  1.39     0.38     0.71     1.06     1.69
crop_tot[4]             0.32    0.00  0.10     0.20     0.26     0.30     0.36
crop_tot_diff[1]        0.26    0.00  0.39    -0.38     0.10     0.24     0.40
crop_tot_diff[2]        1.09    0.02  1.39    -0.06     0.39     0.74     1.35
crop_tot_diff[3]       -0.02    0.00  0.29    -0.62    -0.09     0.02     0.10
crop_int_diff[1]        0.42    0.00  0.23    -0.03     0.26     0.41     0.57
crop_int_diff[2]        0.02    0.00  0.22    -0.43    -0.12     0.03     0.17
crop_int_diff[3]        0.04    0.00  0.22    -0.39    -0.10     0.04     0.18
crop_bdepth_diff[1]    -0.17    0.00  0.31    -0.78    -0.37    -0.17     0.04
crop_bdepth_diff[2]    -0.68    0.00  0.33    -1.34    -0.90    -0.68    -0.46
crop_bdepth_diff[3]    -0.03    0.00  0.29    -0.62    -0.22    -0.03     0.17
lp__                -2090.06    0.41 14.44 -2117.37 -2099.94 -2090.37 -2080.54
                       97.5% n_eff Rhat
loc_detect             -6.77  1999    1
scale_detect            0.80  1327    1
loc_surface[1]         36.79  5645    1
loc_surface[2]         19.69  8362    1
loc_surface[3]         31.03 13078    1
loc_surface[4]         17.50  9367    1
scale_surface[1]       11.91  6133    1
scale_surface[2]        5.58 15140    1
scale_surface[3]        7.62  4780    1
scale_surface[4]        5.05  6486    1
intercept[1]           -6.33  5962    1
intercept[2]           -5.92  5961    1
intercept[3]           -6.34  4924    1
intercept[4]           -6.34  4183    1
b_depth[1]             -0.33  4877    1
b_depth[2]             -0.66  5056    1
b_depth[3]             -1.08  3967    1
b_depth[4]             -0.57  3299    1
sig_tube                0.76  1472    1
sigma[1]                2.13 20000    1
sigma[2]                2.41 20000    1
sigma[3]                2.49 20000    1
sigma[4]                2.34 20000    1
crop_tot[1]             0.95  7806    1
crop_tot[2]             1.34  5622    1
crop_tot[3]             4.73  7109    1
crop_tot[4]             0.57  5825    1
crop_tot_diff[1]        1.02 11497    1
crop_tot_diff[2]        4.33  8251    1
crop_tot_diff[3]        0.30 11192    1
crop_int_diff[1]        0.89  5429    1
crop_int_diff[2]        0.45  6194    1
crop_int_diff[3]        0.47  5645    1
crop_bdepth_diff[1]     0.44 11379    1
crop_bdepth_diff[2]    -0.04 11533    1
crop_bdepth_diff[3]     0.56 11639    1
lp__                -2060.57  1244    1

Samples were drawn using NUTS(diag_e) at Fri Jun 23 15:08:54 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
Inference for Stan model: mctd_foursurf.
5 chains, each with iter=5000; warmup=1000; thin=1; 
post-warmup draws per chain=4000, total post-warmup draws=20000.

                      mean se_mean   sd  2.5%   25%   50%   75% 97.5% n_eff
y_pred[1]             0.04    0.00 0.49  0.00  0.00  0.00  0.01  0.25 20000
y_pred[15]            0.03    0.00 0.25  0.00  0.00  0.00  0.01  0.21 20000
y_pred[28]            0.01    0.00 0.05  0.00  0.00  0.00  0.00  0.05 19771
mu_pred[1]           -2.17    0.01 1.00 -4.00 -2.87 -2.21 -1.52 -0.11  6475
mu_pred[15]          -5.77    0.00 0.61 -6.94 -6.17 -5.78 -5.37 -4.50 15947
mu_pred[28]          -6.41    0.00 0.62 -7.64 -6.82 -6.41 -6.01 -5.20 15713
mu_obs_pred[1]       -5.84    0.01 0.74 -7.26 -6.34 -5.85 -5.36 -4.33 15669
mu_obs_pred[15]      -5.87    0.00 0.61 -7.04 -6.27 -5.88 -5.48 -4.61 16070
mu_obs_pred[28]      -6.61    0.00 0.61 -7.82 -7.00 -6.60 -6.21 -5.43 16482
detect_odds_pred[1]   0.82    0.00 0.16  0.39  0.75  0.87  0.94  0.99 17073
detect_odds_pred[15]  0.83    0.00 0.13  0.48  0.77  0.86  0.93  0.98 19294
detect_odds_pred[28]  0.63    0.00 0.20  0.20  0.49  0.65  0.78  0.93 16754
pred_tot[1]           0.72    0.01 0.68  0.15  0.35  0.54  0.86  2.37 10539
                     Rhat
y_pred[1]               1
y_pred[15]              1
y_pred[28]              1
mu_pred[1]              1
mu_pred[15]             1
mu_pred[28]             1
mu_obs_pred[1]          1
mu_obs_pred[15]         1
mu_obs_pred[28]         1
detect_odds_pred[1]     1
detect_odds_pred[15]    1
detect_odds_pred[28]    1
pred_tot[1]             1

Samples were drawn using NUTS(diag_e) at Fri Jun 23 15:08:54 2017.
For each parameter, n_eff is a crude measure of effective sample size,
and Rhat is the potential scale reduction factor on split chains (at 
convergence, Rhat=1).
[1] "mean of depth: 56.7006172839506"

mean of log(nonzero root volume): -6.405741 

RMSE of mu_obs vs log observed (zeroes excluded):  2.119822 
RMSE/var:  0.4205587 

ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
ci_level: 0.8 (80% intervals)
outer_level: 0.95 (95% intervals)
Warning message:
Removed 1 rows containing missing values (geom_bar). 
Warning message:
Removed 656 rows containing non-finite values (stat_smooth). 
null device 
          1 

real	5m30.341s
user	18m28.176s
sys	0m6.975s
Extracting fits
Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.15.1, packaged: 2017-04-19 05:03:57 UTC, GitRev: 2e1f913d3ca3)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Joining, by = c("term", "estimate", "std.error", "rhat", "ess")
Joining, by = "crop_num"
Joining, by = "parameter"
